using System.Threading.Tasks;

namespace _3.Repositories
{
    /// <summary>
    /// Интерфейс хранилища данных.
    /// </summary>
    public interface IRepository<T>
    {
        /// <summary>
        /// Получение всех записей. Возможно асинхронное выполнение, чтобы не подвешивать систему, так как может выполняться долго.
        /// </summary>
        /// <returns>Записи из хранилища.</returns>
        Task<T[]> GetItems();

        /// <summary>
        /// Добавление новой записи в хранилище. Если в хранилище уже есть запись с таким первичным ключом, выдаётся соответствующее исключение.
        /// Возможно асинхронное выполнение, чтобы не подвешивать систему, так как может выполняться долго из-за добавления записи в БД.
        /// </summary>
        /// <param name="item">Добавляемая запись.</param>
        Task AddItem(T item);

        /// <summary>
        /// Обновление записи в хранилище. Если такой записи в хранилище нет, выдаётся соответствующее исключение.
        /// Возможно асинхронное выполнение, чтобы не подвешивать систему, так как может выполняться долго из-за обновления записи в БД.
        /// </summary>
        /// <param name="item">Обновляемая запись.</param>
        Task UpdateItem(T item);
    }
}